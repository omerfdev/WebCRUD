// <auto-generated />
using System;
using GizliBahceMVC.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SecretGardenMVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230929183405_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SecretGardenMVC.Models.Entitites.Hakkımızda", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelId"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Görev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İsim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonelId");

                    b.ToTable("Hakkımızda");

                    b.HasData(
                        new
                        {
                            PersonelId = 1,
                            Aciklama = "Çanakkale 18 mart Üniversitesi Bilgisayar ve öğretim teknolojileri Eğitmenliği",
                            Görev = "Kurucu ve CEO",
                            Resim = "/Content/img/about-01.jpg",
                            İsim = "Gül YILMAZ"
                        },
                        new
                        {
                            PersonelId = 2,
                            Aciklama = "Atatürk Üniversitesi Gastronomi ve Mutfak Sanatları Bölümü",
                            Görev = "Yönetici Şef",
                            Resim = "/Content/img/about-02.jpg",
                            İsim = "Parla ŞAHİN"
                        },
                        new
                        {
                            PersonelId = 3,
                            Aciklama = "Balıkesir Üniversitesi Gastronomi ve Mutfak Sanatları Bölümü",
                            Görev = "Mutfak Sorumlusu",
                            Resim = "/Content/img/about-03.jpg",
                            İsim = "Tülin MUTLU"
                        },
                        new
                        {
                            PersonelId = 4,
                            Aciklama = "Akdeniz Üniversitesi Gastronomi ve Mutfak Sanatları Bölümü",
                            Görev = "Şef Yardımcısı",
                            Resim = "/Content/img/about-04.jpg",
                            İsim = "Sevgi YILDIZ"
                        });
                });

            modelBuilder.Entity("SecretGardenMVC.Models.Entitites.Iletisim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Iletisim");
                });

            modelBuilder.Entity("SecretGardenMVC.Models.Entitites.Kategori", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriId"), 1L, 1);

                    b.Property<string>("KategoriAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriId");

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new
                        {
                            KategoriId = 1,
                            KategoriAd = "Pizza"
                        },
                        new
                        {
                            KategoriId = 2,
                            KategoriAd = "Salata"
                        },
                        new
                        {
                            KategoriId = 3,
                            KategoriAd = "Noodle"
                        });
                });

            modelBuilder.Entity("SecretGardenMVC.Models.Entitites.Ozellik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButonRenk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ozellikler");
                });

            modelBuilder.Entity("SecretGardenMVC.Models.Entitites.Tarihce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tarihce");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "Sed ligula risus, interdum aliquet imperdiet sit amet, auctor sit amet justo. Maecenas posuere lorem id augue interdum vehicula. Praesent sed leo eget libero ultricies congue.\n\nRedistributing this template as a downloadable ZIP file on any template collection site is strictly prohibited. You will need to contact TemplateMo for additional permissions about our templates. Thank you.",
                            Baslik = "History of our restaurant",
                            Resim = "/Content/img/about-06.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "",
                            Baslik = "",
                            Resim = "/Content/img/about-05.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "Donec sed orci fermentum, convallis lacus id, tempus elit. Sed eu neque accumsan, porttitor arcu a, interdum est. Donec in risus eu ante.",
                            Baslik = "",
                            Resim = "fas fa-4x fa-pepper-hot tm-feature-icon"
                        },
                        new
                        {
                            Id = 4,
                            Aciklama = "Maecenas pretium rutrum molestie. Duis dignissim egestas turpis sit. Nam sed suscipit odio. Morbi in dolor finibus, consequat nisl eget.",
                            Baslik = "",
                            Resim = "fas fa-4x fa-seedling tm-feature-icon"
                        },
                        new
                        {
                            Id = 5,
                            Aciklama = "Morbi in dolor finibus, consequat nisl eget, pretium nunc. Maecenas pretium rutrum molestie. Duis dignissim egestas turpis sit.",
                            Baslik = "",
                            Resim = "fas fa-4x fa-cocktail tm-feature-icon"
                        });
                });

            modelBuilder.Entity("SecretGardenMVC.Models.Entitites.Urunler", b =>
                {
                    b.Property<int>("UrunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunID"), 1L, 1);

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("UrunAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunResim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UrunID");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler");

                    b.HasData(
                        new
                        {
                            UrunID = 1,
                            Fiyat = 55m,
                            KategoriId = 1,
                            UrunAciklama = "Nam in suscipit nisi, sit amet consectetur metus. Ut sit amet tellus accumsan",
                            UrunAd = "Fusce dictum finibus",
                            UrunResim = "/Content/img/gallery/02.jpg"
                        },
                        new
                        {
                            UrunID = 2,
                            Fiyat = 70m,
                            KategoriId = 1,
                            UrunAciklama = "Nam in suscipit nisi, sit amet consectetur metus. Ut sit amet tellus accumsan.",
                            UrunAd = "Aliquam sagittis",
                            UrunResim = "/Content/img/gallery/02.jpg"
                        },
                        new
                        {
                            UrunID = 3,
                            Fiyat = 30m,
                            KategoriId = 1,
                            UrunAciklama = "Nam in suscipit nisi, sit amet consectetur metus. Ut sit amet tellus accumsan",
                            UrunAd = "Sed varius turpis",
                            UrunResim = "/Content/img/gallery/02.jpg"
                        },
                        new
                        {
                            UrunID = 4,
                            Fiyat = 25m,
                            KategoriId = 1,
                            UrunAciklama = "Nam in suscipit nisi, sit amet consectetur metus. Ut sit amet tellus accumsan",
                            UrunAd = "Aliquam sagittis",
                            UrunResim = "/Content/img/gallery/02.jpg"
                        },
                        new
                        {
                            UrunID = 5,
                            Fiyat = 80m,
                            KategoriId = 1,
                            UrunAciklama = "Nam in suscipit nisi, sit amet consectetur metus. Ut sit amet tellus accumsan",
                            UrunAd = "Maecenas eget justo",
                            UrunResim = "/Content/img/gallery/02.jpg"
                        },
                        new
                        {
                            UrunID = 6,
                            Fiyat = 60m,
                            KategoriId = 1,
                            UrunAciklama = "Nam in suscipit nisi, sit amet consectetur metus. Ut sit amet tellus accumsan",
                            UrunAd = "Quisque et felis eros",
                            UrunResim = "/Content/img/gallery/02.jpg"
                        },
                        new
                        {
                            UrunID = 7,
                            Fiyat = 94m,
                            KategoriId = 1,
                            UrunAciklama = "Nam in suscipit nisi, sit amet consectetur metus. Ut sit amet tellus accumsan",
                            UrunAd = "Sed ultricies dui",
                            UrunResim = "/Content/img/gallery/02.jpg"
                        },
                        new
                        {
                            UrunID = 8,
                            Fiyat = 15m,
                            KategoriId = 1,
                            UrunAciklama = "Nam in suscipit nisi, sit amet consectetur metus. Ut sit amet tellus accumsan",
                            UrunAd = "Donec porta consequati",
                            UrunResim = "/Content/img/gallery/02.jpg"
                        },
                        new
                        {
                            UrunID = 9,
                            Fiyat = 25m,
                            KategoriId = 2,
                            UrunAciklama = "Proin eu velit egestas, viverra sapien eget, consequat nunc. Vestibulum tristique",
                            UrunAd = "Salad Menu One",
                            UrunResim = "/Content/img/gallery/01.jpg"
                        },
                        new
                        {
                            UrunID = 10,
                            Fiyat = 30m,
                            KategoriId = 2,
                            UrunAciklama = "Proin eu velit egestas, viverra sapien eget, consequat nunc. Vestibulum tristique",
                            UrunAd = "Second Title Salad",
                            UrunResim = "/Content/img/gallery/01.jpg"
                        },
                        new
                        {
                            UrunID = 11,
                            Fiyat = 45m,
                            KategoriId = 2,
                            UrunAciklama = "Proin eu velit egestas, viverra sapien eget, consequat nunc. Vestibulum tristique",
                            UrunAd = "Third Salad Item",
                            UrunResim = "/Content/img/gallery/01.jpg"
                        },
                        new
                        {
                            UrunID = 12,
                            Fiyat = 50m,
                            KategoriId = 2,
                            UrunAciklama = "Proin eu velit egestas, viverra sapien eget, consequat nunc. Vestibulum tristique",
                            UrunAd = "Superior Salad",
                            UrunResim = "/Content/img/gallery/01.jpg"
                        },
                        new
                        {
                            UrunID = 13,
                            Fiyat = 60m,
                            KategoriId = 2,
                            UrunAciklama = "Proin eu velit egestas, viverra sapien eget, consequat nunc. Vestibulum tristique",
                            UrunAd = "Sed ultricies dui",
                            UrunResim = "/Content/img/gallery/07.jpg"
                        },
                        new
                        {
                            UrunID = 14,
                            Fiyat = 75m,
                            KategoriId = 2,
                            UrunAciklama = "Proin eu velit egestas, viverra sapien eget, consequat nunc. Vestibulum tristique",
                            UrunAd = "Maecenas eget justo",
                            UrunResim = "/Content/img/gallery/07.jpg"
                        },
                        new
                        {
                            UrunID = 15,
                            Fiyat = 12m,
                            KategoriId = 3,
                            UrunAciklama = "Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
                            UrunAd = "Noodle One",
                            UrunResim = "/Content/img/gallery/04.jpg"
                        },
                        new
                        {
                            UrunID = 16,
                            Fiyat = 15m,
                            KategoriId = 3,
                            UrunAciklama = "Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
                            UrunAd = "Noodle Second",
                            UrunResim = "/Content/img/gallery/04.jpg"
                        },
                        new
                        {
                            UrunID = 17,
                            Fiyat = 20m,
                            KategoriId = 3,
                            UrunAciklama = "Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
                            UrunAd = "Third Soft Noodle",
                            UrunResim = "/Content/img/gallery/04.jpg"
                        },
                        new
                        {
                            UrunID = 18,
                            Fiyat = 30m,
                            KategoriId = 3,
                            UrunAciklama = "Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
                            UrunAd = "Aliquam sagittis",
                            UrunResim = "/Content/img/gallery/04.jpg"
                        },
                        new
                        {
                            UrunID = 19,
                            Fiyat = 35m,
                            KategoriId = 3,
                            UrunAciklama = "Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
                            UrunAd = "Maecenas eget justo",
                            UrunResim = "/Content/img/gallery/04.jpg"
                        },
                        new
                        {
                            UrunID = 20,
                            Fiyat = 40m,
                            KategoriId = 3,
                            UrunAciklama = "Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
                            UrunAd = "Quisque et felis eros",
                            UrunResim = "/Content/img/gallery/04.jpg"
                        });
                });

            modelBuilder.Entity("SecretGardenMVC.Models.Entitites.Urunler", b =>
                {
                    b.HasOne("SecretGardenMVC.Models.Entitites.Kategori", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriId");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("SecretGardenMVC.Models.Entitites.Kategori", b =>
                {
                    b.Navigation("Urunler");
                });
#pragma warning restore 612, 618
        }
    }
}
